/*
 * Infection Tracker
 * Infection Tracker - A case management system for tracking the spread of diseases
 *
 * The version of the OpenAPI document: 1.0.0-draft
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.infectionTracker.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.LocalDate;

/**
 * ExposureDto
 */

public class ExposureDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_EXPOSED_PERSON_NAME = "exposedPersonName";
  @SerializedName(SERIALIZED_NAME_EXPOSED_PERSON_NAME)
  private String exposedPersonName;

  public static final String SERIALIZED_NAME_EXPOSED_PERSON_PHONE_NUMBER = "exposedPersonPhoneNumber";
  @SerializedName(SERIALIZED_NAME_EXPOSED_PERSON_PHONE_NUMBER)
  private String exposedPersonPhoneNumber;

  public static final String SERIALIZED_NAME_EXPOSED_DATE = "exposedDate";
  @SerializedName(SERIALIZED_NAME_EXPOSED_DATE)
  private LocalDate exposedDate;

  public static final String SERIALIZED_NAME_EXPOSURE_LOCATION = "exposureLocation";
  @SerializedName(SERIALIZED_NAME_EXPOSURE_LOCATION)
  private String exposureLocation;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_CASE_WORKER = "caseWorker";
  @SerializedName(SERIALIZED_NAME_CASE_WORKER)
  private UUID caseWorker;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    UNIDENTIFIED("unidentified"),
    
    IDENTIFIED("identified"),
    
    CONTACTED("contacted"),
    
    TESTED("tested"),
    
    INFECTED("infected");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;


   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getId() {
    return id;
  }




  public ExposureDto exposedPersonName(String exposedPersonName) {
    
    this.exposedPersonName = exposedPersonName;
    return this;
  }

   /**
   * Get exposedPersonName
   * @return exposedPersonName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Jane Doe", value = "")

  public String getExposedPersonName() {
    return exposedPersonName;
  }


  public void setExposedPersonName(String exposedPersonName) {
    this.exposedPersonName = exposedPersonName;
  }


  public ExposureDto exposedPersonPhoneNumber(String exposedPersonPhoneNumber) {
    
    this.exposedPersonPhoneNumber = exposedPersonPhoneNumber;
    return this;
  }

   /**
   * Get exposedPersonPhoneNumber
   * @return exposedPersonPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExposedPersonPhoneNumber() {
    return exposedPersonPhoneNumber;
  }


  public void setExposedPersonPhoneNumber(String exposedPersonPhoneNumber) {
    this.exposedPersonPhoneNumber = exposedPersonPhoneNumber;
  }


  public ExposureDto exposedDate(LocalDate exposedDate) {
    
    this.exposedDate = exposedDate;
    return this;
  }

   /**
   * Get exposedDate
   * @return exposedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public LocalDate getExposedDate() {
    return exposedDate;
  }


  public void setExposedDate(LocalDate exposedDate) {
    this.exposedDate = exposedDate;
  }


  public ExposureDto exposureLocation(String exposureLocation) {
    
    this.exposureLocation = exposureLocation;
    return this;
  }

   /**
   * Address or other identifying description of the location
   * @return exposureLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address or other identifying description of the location")

  public String getExposureLocation() {
    return exposureLocation;
  }


  public void setExposureLocation(String exposureLocation) {
    this.exposureLocation = exposureLocation;
  }


  public ExposureDto notes(String notes) {
    
    this.notes = notes;
    return this;
  }

   /**
   * Information that may be relevant to identify the person fully or determine if they are infected
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Information that may be relevant to identify the person fully or determine if they are infected")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    this.notes = notes;
  }


  public ExposureDto caseWorker(UUID caseWorker) {
    
    this.caseWorker = caseWorker;
    return this;
  }

   /**
   * The id of the case worker assigned to follow up this person
   * @return caseWorker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the case worker assigned to follow up this person")

  public UUID getCaseWorker() {
    return caseWorker;
  }


  public void setCaseWorker(UUID caseWorker) {
    this.caseWorker = caseWorker;
  }


  public ExposureDto status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExposureDto exposure = (ExposureDto) o;
    return Objects.equals(this.id, exposure.id) &&
        Objects.equals(this.exposedPersonName, exposure.exposedPersonName) &&
        Objects.equals(this.exposedPersonPhoneNumber, exposure.exposedPersonPhoneNumber) &&
        Objects.equals(this.exposedDate, exposure.exposedDate) &&
        Objects.equals(this.exposureLocation, exposure.exposureLocation) &&
        Objects.equals(this.notes, exposure.notes) &&
        Objects.equals(this.caseWorker, exposure.caseWorker) &&
        Objects.equals(this.status, exposure.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, exposedPersonName, exposedPersonPhoneNumber, exposedDate, exposureLocation, notes, caseWorker, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExposureDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    exposedPersonName: ").append(toIndentedString(exposedPersonName)).append("\n");
    sb.append("    exposedPersonPhoneNumber: ").append(toIndentedString(exposedPersonPhoneNumber)).append("\n");
    sb.append("    exposedDate: ").append(toIndentedString(exposedDate)).append("\n");
    sb.append("    exposureLocation: ").append(toIndentedString(exposureLocation)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    caseWorker: ").append(toIndentedString(caseWorker)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

