/*
 * Infection Tracker
 * Infection Tracker - A case management system for tracking the spread of diseases
 *
 * The version of the OpenAPI document: 1.0.0-draft
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.infectionTracker.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.github.jhannes.openapi.infectionTracker.model.ExposureDto;
import io.github.jhannes.openapi.infectionTracker.model.InfectionInformationDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * InfectionDto
 */
@javax.annotation.Generated(value = "io.github.jhannes.openapi.javaannotationfree.JavaCodegen", date = "2020-07-16T23:32:21.036035700+02:00[Europe/Oslo]")
public class InfectionDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_INFORMATION = "information";
  @SerializedName(SERIALIZED_NAME_INFORMATION)
  private InfectionInformationDto information;

  public static final String SERIALIZED_NAME_REGISTERED_EXPOSURES = "registeredExposures";
  @SerializedName(SERIALIZED_NAME_REGISTERED_EXPOSURES)
  private List<ExposureDto> registeredExposures = new ArrayList<ExposureDto>();


   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public UUID getId() {
    return id;
  }




  public InfectionDto information(InfectionInformationDto information) {
    
    this.information = information;
    return this;
  }

   /**
   * Get information
   * @return information
  **/
  @ApiModelProperty(required = true, value = "")

  public InfectionInformationDto getInformation() {
    return information;
  }


  public void setInformation(InfectionInformationDto information) {
    this.information = information;
  }


  public InfectionDto registeredExposures(List<ExposureDto> registeredExposures) {
    
    this.registeredExposures = registeredExposures;
    return this;
  }

  public InfectionDto addRegisteredExposuresItem(ExposureDto registeredExposuresItem) {
    this.registeredExposures.add(registeredExposuresItem);
    return this;
  }

   /**
   * Get registeredExposures
   * @return registeredExposures
  **/
  @ApiModelProperty(required = true, value = "")

  public List<ExposureDto> getRegisteredExposures() {
    return registeredExposures;
  }


  public void setRegisteredExposures(List<ExposureDto> registeredExposures) {
    this.registeredExposures = registeredExposures;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InfectionDto infection = (InfectionDto) o;
    return Objects.equals(this.id, infection.id) &&
        Objects.equals(this.information, infection.information) &&
        Objects.equals(this.registeredExposures, infection.registeredExposures);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, information, registeredExposures);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InfectionDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    information: ").append(toIndentedString(information)).append("\n");
    sb.append("    registeredExposures: ").append(toIndentedString(registeredExposures)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

