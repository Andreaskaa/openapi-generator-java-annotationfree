/*
 * Poly API
 * An example of a polymorphic API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: johannes@brodwall.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.poly.api;

import io.github.jhannes.openapi.poly.ApiException;
import io.github.jhannes.openapi.poly.model.AnyPartyDto;
import io.github.jhannes.openapi.poly.model.CreationErrorDto;
import java.util.UUID;
import io.github.jhannes.openapi.poly.model.UpdateErrorDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partiesGetTest() throws ApiException {
        AnyPartyDto response = api.partiesGet();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partiesIdPutTest() throws ApiException {
        UUID id = null;
        AnyPartyDto anyPartyDto = null;
        api.partiesIdPut(id, anyPartyDto);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void partiesPostTest() throws ApiException {
        AnyPartyDto anyPartyDto = null;
        api.partiesPost(anyPartyDto);

        // TODO: test validations
    }
    
}
