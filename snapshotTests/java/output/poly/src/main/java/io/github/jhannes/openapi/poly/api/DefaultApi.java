/*
 * Poly API
 * An example of a polymorphic API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: johannes@brodwall.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.github.jhannes.openapi.poly.api;

import io.github.jhannes.openapi.poly.ApiCallback;
import io.github.jhannes.openapi.poly.ApiClient;
import io.github.jhannes.openapi.poly.ApiException;
import io.github.jhannes.openapi.poly.ApiResponse;
import io.github.jhannes.openapi.poly.Configuration;
import io.github.jhannes.openapi.poly.Pair;
import io.github.jhannes.openapi.poly.ProgressRequestBody;
import io.github.jhannes.openapi.poly.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.github.jhannes.openapi.poly.model.AnyPartyDto;
import io.github.jhannes.openapi.poly.model.CreationErrorDto;
import java.util.UUID;
import io.github.jhannes.openapi.poly.model.UpdateErrorDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for partiesGet
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all parties that the user can see </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call partiesGetCall(final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/parties";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call partiesGetValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = partiesGetCall(_callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @return AnyPartyDto
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all parties that the user can see </td><td>  -  </td></tr>
     </table>
     */
    public AnyPartyDto partiesGet() throws ApiException {
        ApiResponse<AnyPartyDto> localVarResp = partiesGetWithHttpInfo();
        return localVarResp.getData();
    }

    /**
     * 
     * 
     * @return ApiResponse&lt;AnyPartyDto&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all parties that the user can see </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AnyPartyDto> partiesGetWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = partiesGetValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<AnyPartyDto>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * 
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns all parties that the user can see </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call partiesGetAsync(final ApiCallback<AnyPartyDto> _callback) throws ApiException {

        okhttp3.Call localVarCall = partiesGetValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<AnyPartyDto>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for partiesIdPut
     * @param id  (required)
     * @param anyPartyDto  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was updated </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call partiesIdPutCall(UUID id, AnyPartyDto anyPartyDto, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = anyPartyDto;

        // create path and map variables
        String localVarPath = "/parties/{id}"
            .replaceAll("\\{" + "id" + "\\}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call partiesIdPutValidateBeforeCall(UUID id, AnyPartyDto anyPartyDto, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling partiesIdPut(Async)");
        }
        

        okhttp3.Call localVarCall = partiesIdPutCall(id, anyPartyDto, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param id  (required)
     * @param anyPartyDto  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was updated </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public void partiesIdPut(UUID id, AnyPartyDto anyPartyDto) throws ApiException {
        partiesIdPutWithHttpInfo(id, anyPartyDto);
    }

    /**
     * 
     * 
     * @param id  (required)
     * @param anyPartyDto  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was updated </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> partiesIdPutWithHttpInfo(UUID id, AnyPartyDto anyPartyDto) throws ApiException {
        okhttp3.Call localVarCall = partiesIdPutValidateBeforeCall(id, anyPartyDto, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * 
     * @param id  (required)
     * @param anyPartyDto  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was updated </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call partiesIdPutAsync(UUID id, AnyPartyDto anyPartyDto, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = partiesIdPutValidateBeforeCall(id, anyPartyDto, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for partiesPost
     * @param anyPartyDto  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was created </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call partiesPostCall(AnyPartyDto anyPartyDto, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = anyPartyDto;

        // create path and map variables
        String localVarPath = "/parties";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call partiesPostValidateBeforeCall(AnyPartyDto anyPartyDto, final ApiCallback _callback) throws ApiException {
        

        okhttp3.Call localVarCall = partiesPostCall(anyPartyDto, _callback);
        return localVarCall;

    }

    /**
     * 
     * 
     * @param anyPartyDto  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was created </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public void partiesPost(AnyPartyDto anyPartyDto) throws ApiException {
        partiesPostWithHttpInfo(anyPartyDto);
    }

    /**
     * 
     * 
     * @param anyPartyDto  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was created </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> partiesPostWithHttpInfo(AnyPartyDto anyPartyDto) throws ApiException {
        okhttp3.Call localVarCall = partiesPostValidateBeforeCall(anyPartyDto, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * 
     * @param anyPartyDto  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The party was created </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Something went wrong </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call partiesPostAsync(AnyPartyDto anyPartyDto, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = partiesPostValidateBeforeCall(anyPartyDto, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
